@model List<WebApp.Models.Users>
@using Microsoft.AspNetCore.Identity

<link rel="stylesheet" href="~/css/superadmin.css" asp-append-version="true" />

@{
    ViewData["Title"] = "User Management";
    var userRoles = ViewBag.UserRoles as Dictionary<string, List<string>>;
    var roles = ViewBag.Roles as List<IdentityRole>;
    Layout = "~/Views/Shared/Layouts/_DashboardLayout.cshtml";

    // Filter out the SuperAdmin role
    var filteredRoles = roles.Where(r => r.Name != "SuperAdmin").ToList();
}

<div class="container-fluid">
    <h2 class="text-center mb-4 p-4 border rounded shadow-sm bg-light">
        User Management
    </h2>


    <!-- Display TempData messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }


    <div class="d-flex justify-content-between align-items-center mb-3">
        <input type="text" id="searchInput" class="form-control w-25" placeholder="Search Users...">
        <button class="btn btn-success btn-modern">Add User</button>
    </div>

    <div class="table-responsive">
        <table class="table table-hover user-table text-center" id="userTable">
            <thead class="table-dark">
                <tr>
                    <th>Profile</th>
                    <th>ID</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    // Skip rendering the SuperAdmin user
                    if (!userRoles[user.Id].Contains("SuperAdmin"))
                    {
                        <tr id="user-@user.Id">
                            <td class="align-middle">
                                <img src="@user.ProfilePictureUrl" alt="Profile" class="profile-img rounded-circle">
                            </td>
                            <td class="align-middle">@user.Id</td>
                            <td class="align-middle">
                                <span class="email-text">@user.Email</span>
                            </td>
                            <td class="align-middle">
                                <form method="post" asp-action="UpdateUserRole" asp-controller="UsersManagement"
                                    id="updateForm-@user.Id">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <select name="newRole" class="form-select role-select" disabled>
                                        @foreach (var role in filteredRoles)
                                        {
                                            <option value="@role.Name"
                                                selected="@(userRoles[user.Id]?.Contains(role.Name) == true ? "selected" : null)">
                                                @role.Name
                                            </option>
                                        }
                                    </select>
                                </form>
                            </td>
                            <td class="align-middle">
                                <button class="btn btn-primary btn-sm edit-btn btn-modern"
                                    onclick="toggleEdit('@user.Id')">Edit</button>
                                <button type="button" class="btn btn-success btn-sm update-btn btn-modern"
                                    style="display: none;" onclick="confirmUpdate('@user.Id')">Update</button>
                                <button type="button" class="btn btn-danger btn-sm btn-modern"
                                    onclick="confirmDelete('@user.Id')">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Bootstrap Confirmation Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to perform this action?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmAction">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Function to toggle edit mode
    function toggleEdit(userId) {
        const row = document.getElementById(`user-${userId}`);
        const roleSelect = row.querySelector('.role-select');
        const editBtn = row.querySelector('.edit-btn');
        const updateBtn = row.querySelector('.update-btn');

        roleSelect.disabled = !roleSelect.disabled;
        editBtn.style.display = roleSelect.disabled ? 'inline-block' : 'none';
        updateBtn.style.display = roleSelect.disabled ? 'none' : 'inline-block';
    }

    // Function to handle search
    document.getElementById('searchInput').addEventListener('keyup', function () {
        let search = this.value.toLowerCase();
        let rows = document.querySelectorAll('#userTable tbody tr');
        rows.forEach(row => {
            let email = row.cells[2].querySelector('.email-text').textContent.toLowerCase();
            row.style.display = email.includes(search) ? '' : 'none';
        });
    });

    // Function to confirm delete action
    function confirmDelete(userId) {
        const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
        document.getElementById('confirmAction').onclick = function () {
            fetch(`/UsersManagement/DeleteUser?userId=${userId}`, {
                method: 'POST',
            }).then(response => {
                if (response.ok) {
                    window.location.reload(); // Reload the page after deletion
                } else {
                    alert('Failed to delete user');
                }
            });
            modal.hide();
        };
        modal.show();
    }

    // Function to confirm update action
    function confirmUpdate(userId) {
        const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
        document.getElementById('confirmAction').onclick = function () {
            document.getElementById(`updateForm-${userId}`).submit(); // Submit the update form
            modal.hide();
        };
        modal.show();
    }
</script>