@using Microsoft.AspNetCore.Identity;
@model List<IdentityRole>

<link rel="stylesheet" href="~/css/superadmin.css" asp-append-version="true" />

@{
    ViewData["Title"] = "Role Management";
    var rolePermissions = ViewBag.RolePermissions as Dictionary<string, List<string>> ?? new Dictionary<string,
    List<string>>();
    var allPermissions = ViewBag.AllPermissions as List<string> ?? new List<string>();
    Layout = "~/Views/Shared/Layouts/_DashboardLayout.cshtml";
}

<div class="container mt-4 mb-4">
    <h2 class="text-center mb-4 p-4 border rounded shadow-sm bg-light">Roles Management</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <input type="text" id="searchInput" class="form-control w-25" placeholder="Search Roles...">
        <button class="btn btn-success btn-modern">Add Role</button>
    </div>

    <div class="table-responsive">
        <table class="table table-hover user-table text-center" id="roleTable">
            <thead class="table-dark">
                <tr>
                    <th>Role</th>
                    @foreach (var permission in allPermissions)
                    {
                        <th>@permission</th>
                    }
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var role in Model)
                {
                    if (role.Name != "SuperAdmin")
                    {
                        <tr id="role-@role.Id">
                            <td class="align-middle">@role.Name</td>
                            <form asp-action="UpdateRolePermissions" method="post" id="updateForm-@role.Id">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="roleId" value="@role.Id" />
                                @foreach (var permission in allPermissions)
                                {
                                    var isChecked = rolePermissions.ContainsKey(role.Name) &&
                                    rolePermissions[role.Name].Contains(permission);
                                    <td class="align-middle">
                                        <div class="form-check form-check-inline d-flex justify-content-center">
                                            <input type="checkbox" name="selectedPermissions" value="@permission"
                                                class="form-check-input" @(isChecked ? "checked" : "") disabled>
                                        </div>
                                    </td>
                                }
                                <td class="align-middle">
                                    <button type="button" class="btn btn-primary btn-sm edit-btn btn-modern"
                                        onclick="toggleEdit('@role.Id')">Edit</button>
                                    <button type="button" class="btn btn-success btn-sm update-btn btn-modern"
                                        style="display: none;" onclick="confirmUpdate('@role.Id')">Update</button>
                                </td>
                            </form>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Bootstrap Confirmation Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">Are you sure you want to update this role's permissions?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmAction">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleEdit(roleId) {
        const row = document.getElementById(`role-${roleId}`);
        const checkboxes = row.querySelectorAll('input[type="checkbox"]');
        const editBtn = row.querySelector('.edit-btn');
        const updateBtn = row.querySelector('.update-btn');

        checkboxes.forEach(checkbox => {
            checkbox.disabled = !checkbox.disabled;
        });

        editBtn.style.display = checkboxes[0].disabled ? 'inline-block' : 'none';
        updateBtn.style.display = checkboxes[0].disabled ? 'none' : 'inline-block';
    }

    document.getElementById('searchInput').addEventListener('keyup', function () {
        let search = this.value.toLowerCase();
        let rows = document.querySelectorAll('#roleTable tbody tr');
        rows.forEach(row => {
            let roleName = row.cells[0].textContent.toLowerCase();
            row.style.display = roleName.includes(search) ? '' : 'none';
        });
    });

    function confirmUpdate(roleId) {
        const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
        document.getElementById('confirmAction').onclick = function () {
            document.getElementById(`updateForm-${roleId}`).submit();
            modal.hide();
        };
        modal.show();
    }
</script>