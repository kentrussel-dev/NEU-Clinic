@using System.Text.Json;
@using Microsoft.EntityFrameworkCore;
@using Microsoft.AspNetCore.Identity
@using WebApp.ViewModels
@using WebApp.Data
@inject UserManager<Users> userManager
@inject SignInManager<Users> signInManager
@inject AppDbContext _context

@{
    var user = await userManager.GetUserAsync(User);
    var email = user?.Email ?? "N/A";
    var name = user?.FullName ?? user?.UserName ?? "N/A";
    var profilePic = user?.ProfilePictureUrl ?? "/images/default-profile.png";

    // Get user roles
    var roles = user != null ? await userManager.GetRolesAsync(user) : new List<string>();
    var role = roles.Any() ? string.Join(", ", roles) : "No Role Assigned";

    // Initialize role flags
    var isSuperAdmin = roles.Contains("SuperAdmin");
    var isAdmin = roles.Contains("Admin");
    var isMedicalStaff = roles.Contains("MedicalStaff");
    var isStudent = roles.Contains("Student");

    // Set userRole based on the highest priority role
    var userRole = "Student";
    if (isSuperAdmin)
    {
        userRole = "SuperAdmin";
    }
    else if (isAdmin)
    {
        userRole = "Admin";
    }
    else if (isMedicalStaff)
    {
        userRole = "MedicalStaff";
    }
    else if (isStudent)
    {
        userRole = "Student";
    }
}

<!-- Custom CSS -->
<link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />

<div class="container my-2">
    <div class="row">
        <!-- Left Column: Profile Card and QR Code -->
        <div class="col-md-4">
            <!-- Profile Card -->
            <div class="card profile-card shadow-sm mb-3">
                <div class="card-header bg-primary text-white text-center">
                    <h4 class="mb-0">Profile Information</h4>
                </div>
                <div class="card-body text-center">
                    <div class="profile-picture-container mb-3">
                        <img src="@profilePic" alt="Profile Picture" class="profile-picture rounded-circle">
                        <div class="profile-picture-overlay">
                            <label for="profile-picture-upload" class="upload-label btn btn-light btn-sm">Change
                                Photo</label>
                            <input type="file" id="profile-picture-upload" style="display: none;" />
                        </div>
                    </div>
                    <h5 class="card-title">@name</h5>
                    <p class="card-text text-muted">@email</p>
                    <p class="card-text text-muted">@role</p>
                    <hr>
                    <!-- Health Metrics -->
                    <div class="profile-stats d-flex justify-content-around">
                        <div>
                            <h6 class="stat-number">100%</h6>
                            <p class="stat-label text-muted">Vaccination</p>
                        </div>
                        <div>
                            <h6 class="stat-number">2</h6>
                            <p class="stat-label text-muted">Health Alerts</p>
                        </div>
                        <div>
                            <h6 class="stat-number">1</h6>
                            <p class="stat-label text-muted">Active Cases</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- QR Code Card -->
            <div class="card qr-code-card shadow-sm">
                <div class="card-header bg-primary text-white text-center">
                    <h4 class="mb-0">Virtual QR Code ID</h4>
                </div>
                <div class="card-body text-center">
                    <!-- Dynamic QR Code Image from user.QRCodePath -->
                    @if (!string.IsNullOrEmpty(user?.QRCodePath))
                    {
                        <div class="qr-code-container">
                            <img src="@Url.Content(user.QRCodePath)" alt="QR Code" class="img-fluid" id="qrCodeImage">
                            <!-- Download Button (Hidden by default, shown on hover) -->
                            <div class="qr-code-overlay">
                                <button id="downloadQrCodeBtn" class="btn btn-light btn-sm">
                                    <span class="text-center"><i class="fas fa-download"></i> Download QR Code</span>
                                </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No QR Code available.</p>
                    }
                    <p class="mt-2 text-muted">Scan this QR code for your Virtual ID.</p>
                </div>
            </div>
        </div>

        <!-- Right Column: Personal and Health Information -->
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Personal & Health Information</h4>
                </div>
                <div class="card-body">
                    <!-- Personal Details -->
                    <h5 class="mb-3">Personal Details</h5>
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                    }
                    <form id="personalDetailsForm" asp-controller="Profile" asp-action="UpdatePersonalDetails"
                        method="post">
                        @await Html.PartialAsync("Profile/_PersonalDetailsPartial")
                    </form>
                    @if (isStudent)
                    {
                        @await Html.PartialAsync("Profile/_MedicalDetailsPartial")
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Function to make fields editable
    function makeEditable(fieldId) {
        const field = document.getElementById(fieldId);
        if (field) {
            field.removeAttribute("readonly");
            field.removeAttribute("disabled");
            field.focus();
            document.getElementById("updateButton").style.display = "block";
        }
    }

    document.getElementById("downloadQrCodeBtn")?.addEventListener("click", function () {
        console.log("Download button clicked!"); // Check if this appears in the browser console
        const qrCodeImage = document.getElementById("qrCodeImage");
        if (qrCodeImage) {
            const link = document.createElement("a");
            link.href = qrCodeImage.src;
            link.download = "qr-code.png";
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        } else {
            console.error("QR Code image not found.");
        }
    });
</script>
